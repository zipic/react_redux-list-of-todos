{"version":3,"sources":["features/currentTodo.ts","features/filter.ts","features/todos.ts","app/store.ts","app/hooks.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["actions","todo","type","payload","currentTodoReducer","state","action","setQuery","query","setStatus","status","initialState","filterReducer","loadTodos","todos","todosReducer","rootReducer","combineReducers","currentTodo","filter","store","createStore","composeWithDevTools","applyMiddleware","thunk","useAppDispatch","useDispatch","useAppSelector","useSelector","TodoList","dispatch","filteredTodos","matchesQuery","title","toLowerCase","includes","completed","length","className","map","id","cn","onClick","TodoFilter","onSubmit","event","preventDefault","value","onChange","e","target","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","useState","user","setUser","useEffect","userId","users","href","email","name","App","data","Root","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8a60e5cf.chunk.js","sourcesContent":["import { Todo } from '../types/Todo';\n\n// we use string literal as a type to avoid mistype in future\ntype RemoveTodoAction = { type: 'currentTodo/REMOVE' };\n\n// payload is a typical name for an action data\ntype SetTodoAction = {\n  type: 'currentTodo/SET';\n  payload: Todo;\n};\n\n// Action creator return type protect us from a mistype\nconst removeTodo = (): RemoveTodoAction => ({ type: 'currentTodo/REMOVE' });\n\nconst setTodo = (todo: Todo): SetTodoAction => ({\n  type: 'currentTodo/SET',\n  payload: todo,\n});\n\n// These actions will be used in the application\nexport const actions = { setTodo, removeTodo };\n\ntype State = Todo | null;\ntype Action = SetTodoAction | RemoveTodoAction;\n\nconst currentTodoReducer = (\n  state: State = null,\n  action: Action,\n): State => {\n  switch (action.type) {\n    case 'currentTodo/SET':\n      return action.payload;\n    case 'currentTodo/REMOVE':\n      return null;\n\n    default:\n      return state;\n  }\n};\n\nexport default currentTodoReducer;\n","import { Status } from '../types/Status';\n\nexport const setQuery = (query: string) => ({\n  type: 'SET_QUERY',\n  payload: query,\n});\n\nexport const setStatus = (status: Status) => ({\n  type: 'SET_STATUS',\n  payload: status,\n});\nexport const actions = { setQuery, setStatus };\n\ntype Action = ReturnType<typeof setQuery> | ReturnType<typeof setStatus>;\n\nconst initialState = {\n  query: '',\n  status: 'all',\n};\n\nconst filterReducer = (state = initialState, action: Action) => {\n  switch (action.type) {\n    case 'SET_QUERY':\n      return {\n        ...state,\n        query: action.payload,\n      };\n    case 'SET_STATUS':\n      return {\n        ...state,\n        status: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default filterReducer;\n","import { Todo } from '../types/Todo';\n\nexport const loadTodos = (todos: Todo[]) => ({\n  type: 'LOAD_TODOS',\n  payload: todos,\n});\n\nexport const actions = { loadTodos };\n\ntype Action = ReturnType<typeof loadTodos>;\n\ninterface TodosState {\n  todos: Todo[];\n}\n\nconst initialState: TodosState = {\n  todos: [],\n};\n\nconst todosReducer = (state = initialState, action: Action): TodosState => {\n  switch (action.type) {\n    case 'LOAD_TODOS':\n      return {\n        ...state,\n        todos: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default todosReducer;\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nimport currentTodoReducer from '../features/currentTodo';\nimport filterReducer from '../features/filter';\nimport todosReducer from '../features/todos';\n\nconst rootReducer = combineReducers({\n  currentTodo: currentTodoReducer,\n  filter: filterReducer,\n  todos: todosReducer,\n});\n\n// The `store` is passed to the Provider in `/src/index.tsx`\nexport const store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(thunk),\n  ),\n);\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport { AppDispatch, RootState } from './store';\n\nexport const useAppDispatch: () => AppDispatch = useDispatch;\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","/* eslint-disable max-len */\nimport React from 'react';\nimport cn from 'classnames';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { actions } from '../../features/currentTodo';\n\nexport const TodoList: React.FC = () => {\n  const { todos } = useAppSelector(state => state.todos);\n  const { status, query } = useAppSelector(state => state.filter);\n  const currentTodo = useAppSelector(state => state.currentTodo);\n  const dispatch = useAppDispatch();\n\n  const filteredTodos = todos.filter(todo => {\n    const matchesQuery = todo.title.toLowerCase().includes(query.toLowerCase());\n\n    if (status === 'all') {\n      return matchesQuery;\n    }\n\n    if (status === 'completed') {\n      return todo.completed && matchesQuery;\n    }\n\n    if (status === 'active') {\n      return !todo.completed && matchesQuery;\n    }\n\n    return true;\n  });\n\n  return (\n    <>\n      {!filteredTodos.length && (\n        <p className=\"notification is-warning\">\n          There are no todos matching current filter criteria\n        </p>\n      )}\n      <table className=\"table is-narrow is-fullwidth\">\n        {filteredTodos.length ? (\n          <thead>\n            <tr>\n              <th>#</th>\n\n              <th>\n                <span className=\"icon\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              </th>\n\n              <th>Title</th>\n              <th> </th>\n            </tr>\n          </thead>\n        ) : null}\n        <tbody>\n          {filteredTodos.map(todo => (\n            <tr key={todo.id} data-cy=\"todo\">\n              <td className=\"is-vcentered\">{todo.id}</td>\n              <td className=\"is-vcentered\">\n\n                {todo.completed ? (\n                  <span className=\"icon\" data-cy=\"iconCompleted\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                ) : null}\n              </td>\n\n              <td className=\"is-vcentered is-expanded\">\n                <p className={cn({ 'has-text-success': todo.completed, 'has-text-danger': !todo.completed })}>{todo.title}</p>\n              </td>\n\n              <td className=\"has-text-right is-vcentered\">\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => dispatch(actions.setTodo(todo))}\n                >\n                  <span className=\"icon\">\n                    <i className={cn('far', {\n                      'fa-eye-slash': todo.id === currentTodo?.id,\n                      'fa-eye': todo.id !== currentTodo?.id,\n                    })}\n                    />\n                  </span>\n                </button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </>\n  );\n};\n","import React from 'react';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { Status } from '../../types/Status';\nimport { setQuery, setStatus } from '../../features/filter';\n\nexport const TodoFilter: React.FC = () => {\n  const dispatch = useAppDispatch();\n  const { query, status } = useAppSelector(state => state.filter);\n\n  const handleStatusChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    dispatch(setStatus(e.target.value as Status));\n  };\n\n  const handleSearchInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    dispatch(setQuery(e.target.value));\n  };\n\n  const handerClear = () => {\n    dispatch(setQuery(''));\n  };\n\n  return (\n    <form\n      className=\"field has-addons\"\n      onSubmit={event => event.preventDefault()}\n    >\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={status}\n            onChange={handleStatusChange}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={handleSearchInputChange}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n        {query.length ? (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={handerClear}\n            />\n          </span>\n        ) : null}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport cn from 'classnames';\nimport { Loader } from '../Loader';\nimport { User } from '../../types/User';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { getUser } from '../../api';\nimport { actions } from '../../features/currentTodo';\n\nexport const TodoModal: React.FC = () => {\n  const [user, setUser] = useState<User | null>(null);\n  const dispatch = useAppDispatch();\n  const currentTodo = useAppSelector(state => state.currentTodo);\n\n  useEffect(() => {\n    if (currentTodo?.userId) {\n      getUser(currentTodo.userId)\n        .then(users => setUser(users));\n    }\n  }, []);\n\n  // const handlerClosePost = () => {\n  //   dispatch(actions.removeTodo());\n  // };\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user && <Loader />}\n\n      <div className=\"modal-card\">\n        <header className=\"modal-card-head\">\n          <div\n            className=\"modal-card-title has-text-weight-medium\"\n            data-cy=\"modal-header\"\n          >\n            {`Todo #${currentTodo?.id}`}\n          </div>\n\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button\n            type=\"button\"\n            className=\"delete\"\n            data-cy=\"modal-close\"\n            onClick={() => dispatch(actions.removeTodo())}\n          />\n        </header>\n\n        <div className=\"modal-card-body\">\n          <p className=\"block\" data-cy=\"modal-title\">{currentTodo?.title}</p>\n\n          <p className=\"block\" data-cy=\"modal-user\">\n            {/* For not completed */}\n            <strong className={cn({\n              'has-text-success': currentTodo?.completed,\n              'has-text-danger': !currentTodo?.completed,\n            })}\n            >\n              {currentTodo?.completed ? ('Done') : ('Planned')}\n            </strong>\n\n            {' by '}\n            <a href={`mailto:${user?.email}`}>\n              {user?.name}\n            </a>\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { useAppDispatch, useAppSelector } from './app/hooks';\nimport { getTodos } from './api';\nimport { loadTodos } from './features/todos';\n\nexport const App: React.FC = () => {\n  const dispatch = useAppDispatch();\n  const { todos } = useAppSelector(state => state.todos);\n  const currentTodo = useAppSelector(state => state.currentTodo);\n\n  useEffect(() => {\n    getTodos()\n      .then(data => {\n        dispatch(loadTodos(data));\n      });\n  }, [dispatch]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter />\n            </div>\n\n            <div className=\"block\">\n              {!todos.length ? (\n                <Loader />)\n                : (\n                  <TodoList />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {currentTodo && <TodoModal />}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport { store } from './app/store';\nimport { App } from './App';\n\n// Just a convenient component with all the wrappers for the `App`\n// The Router component (if you use it) should be placed inside the Provider\nconst Root = () => (\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}